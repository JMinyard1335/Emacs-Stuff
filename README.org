#+TITLE: Emacs-Stuff
#+AUTHOR: Jachin Minyard
:PROPERTIES:
#+LATEX_CLASS: article
#+STARTUP: overview
#+OPTIONS: toc:nil
#+OPTIONS: todo:nil
#+OPTIONS: H:6
#+OPTIONS: num:1
#+LATEX_HEADER: \usepackage[margin=.75in]{geometry}
#+LATEX_HEADER_EXTRA: \usepackage{tikz}
#+LATEX_HEADER_EXTRA: \usepackage{graphicx}
:END:

* Introduction 
Welcome to my Emacs configuration! This reapo is a collection of different modifications I have made to my Emacs configuration. I have been broken these configurations in to easy to customize modules that can be used independently of each other.

* Installation
To install this reapo run the command below in a directory of your choice I tend to stick it in my home dir
For HTTPS:
#+begin_src bash
  git clone https://github.com/JMinyard1335/Emacs-Stuff.git
#+end_src
For SSH
#+begin_src bash
  git clone git@github.com:JMinyard1335/Emacs-Stuff.git
#+end_src

Once you have cloned the repository you can copy init file from the directory named after your operating system of choice to your ~/.emacs.d/  or simply follow along with the instructions in the setup section of the readme
* Setup
By the end of the setup your init file should look something along the lines of the following:
#+begin_src emacs-lisp
  (require 'package)
  (setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                           ("org" . "https://orgmode.org/elpa/")
                           ("melpa" . "https://melpa.org/packages/")))

  (package-initialize)

  (add-to-list 'custom-theme-load-path "~/Emacs-Stuff/Themes/")
  (add-to-list 'load-path "~/Emacs-Stuff/Linux/Config/")

  (setq warning-minimum-level :emergency)

  (add-hook 'after-init-hook
            (lambda ()
              (set-face-attribute 'fixed-pitch nil :font "VictorMonoNerdFontMono" :italic nil)))

  ;; Load Packages --------------------------------------------------------------------------------------

  (use-package gui-setup
    :config
    (setq my-battery t
          my-font-name "VictorMonoNerdFontMono"
          my-font-italic t
          my-fullscreen t
          my-theme 'wombat)
    (setup-gui))

  (use-package modeline-setup
    :config
    (setq my-modeline-battery t
          my-modeline-time t
          my-modeline-display-buffer t
          my-modeline-content-info t)
    (my-modeline-setup))

  (use-package autoinsert-setup
    :config
    (my-set-snippet-dirs "/Emacs-Stuff/Snippets")
    (yas-reload-all))

  (use-package language-setup
    :config
    (setq my-eglot-ensure-list
          '(c++-mode-hook
            c++-ts-mode-hook
            c-mode-hook
            c-ts-mode-hook
            java-mode-hook
            java-ts-mode-hook
            python-mode-hook
            python-ts-mode-hook
            janet-mode-hook))
    (my-eglot-ensure))

  (use-package tools-setup
    :config
    (setq my-company-mode-list '(prog-mode-hook)
          my-electric-pair-mode-list '(prog-mode-hook)
          my-rainbow-mode-list '(prog-mode-hook org-mode-hook)
          my-flyspell-mode-list '(text-mode-hook org-mode-hook)
          my-hs-mode-list '(prog-mode-hook janet-mode-hook))
    (my-tool-hook-setup))

  (use-package ligatures-setup)

  (use-package copilot-setup
    :config
    (setq my-copilot-mode-list
          '(prog-mode-hook
            org-mode-hook))
    (my-copilot-hook))

  (use-package org-setup
    :config
    (my-org-faces)
    (setq org-directory "~/Emacs-Stuff/Org/")
    (my-org-agenda-files '("school.org" "journal.org" "todo.org"))
    (setq org-capture-templates (doct (list (my-school-capture))))
    (my-org-agenda)
    (my-org-tags)
    (my-org-logging)
    (my-org-todo))


  ;; Set Up Keybinds -----------------------------------------------------------------------------------------

  (add-hook 'hs-minor-mode-hook
            (lambda ()
              (define-key hs-minor-mode-map (kbd "C-;") 'hs-hide-block)
              (define-key hs-minor-mode-map (kbd "C-'") 'hs-show-block)
              (define-key hs-minor-mode-map (kbd "C-:") 'hs-hide-all)
              (define-key hs-minor-mode-map (kbd "C-\"") 'hs-show-all)))

  (add-hook 'flyspell-mode-hook
            (lambda ()
              (define-key flyspell-mode-map (kbd "C-s c") 'flyspell-correct-word-before-point)
              (define-key flyspell-mode-map (kbd "C-s b") 'flyspell-buffer)
              (define-key flyspell-mode-map (kbd "C-s a") 'ispell-buffer)))

  (add-hook 'company-mode-hook
            (lambda ()
              (define-key company-active-map (kbd "C-n") 'company-select-next)
              (define-key company-active-map (kbd "C-p") 'company-select-previous)
              (define-key company-active-map (kbd "C-g") 'company-abort)))

  (add-hook 'copilot-mode-hook
            (lambda ()
              (define-key copilot-mode-map (kbd "C-<return>") 'copilot-complete)
              (define-key copilot-mode-map (kbd "C-s-<right>") 'copilot-accept-completion-by-word)
              (define-key copilot-mode-map (kbd "C-s-<down>") 'copilot-accept-completion-by-line)
              (define-key copilot-mode-map (kbd "C-c n") 'copilot-next-completion)
              (define-key copilot-mode-map (kbd "C-c p") 'copilot-previous-completion)))

  (add-hook 'org-mode-hook
            (lambda ()
              (define-key org-mode-map (kbd "C-c i") 'org-insert-todo-heading)))
#+end_src
I know this seems like a lot but lets go through each part and figure out what you need/want to include in the init file.
** Package Setup
This is the first part of the init file and is responsible for setting up the package manager and the package archives. This is a necessary part of the init file and should be included in all configurations.
#+begin_src emacs-lisp
(require 'package)
(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
			 ("org" . "https://orgmode.org/elpa/")
			 ("melpa" . "https://melpa.org/packages/")))

(package-initialize)
#+end_src
After this is another required part of the configuration, and that is telling the init file where to find all of the Emacs-stuff modules. To do this edit the following lines with the appropriate paths to  the Themes directory and the OS(Windows, Linux) config of choice.
#+begin_src emacs-lisp
(add-to-list 'custom-theme-load-path "/Path/To/Themes")
(add-to-list 'load-path "/Path/To/Config")
#+end_src
There are just a few more things before we get into the fun part.  Since Emacs 29 there have been alot of warnings from different packages that have been annoying me so I have set the warning level to emergency. This can be changed to your liking.
  * THIS IS BAD PRACTICE AS IT HIDES ALL WARNINGS
#+begin_src emacs-lisp
(setq warning-minimum-level :emergency)
#+end_src
** GUI Set Up
We have now arrived to one of the most important parts of any good configuration, how it looks! if your config looks bad I will probably assume it is bad. All jokes aside this module allows you to set various aspects of the gui's appearance without having to dig through loads of customization pages. Below is the code for all the options available to set in the gui-setup module.
#+begin_src emacs-lisp
(use-package gui-setup
  :config
  (setq my-battery t
	my-font-name "VictorMonoNerdFontMono"
	my-font-size 12
	my-font-italic t
	my-theme 'wombat
	my-frame-width 80
	my-frame-height 30
	my-fullscreen t
	my-menu-bar nil
	my-tool-bar nil
	my-scroll-bar nil
	my-line-numbers t
	my-tab-line t
	my-startup-buffer nil
	)
  (setup-gui))
#+end_src
Below is additional information of each of the variables above
*** my-font-name
This variable is used to set the font of the gui. Do not set this to "VictorMonoNerdFont" Unless it is installed on your system. Instead Pick one of the system fonts.
*** my-font-size
The Size of the font make sure to represent this as 10 * font size. so if you want 14pt font then set this value to 140.
*** my-font-italic
This was more for me since my font is a cursive font and need to be italic to do that. Set this to t if you want all the font to be italic.
*** my-theme
Used to set the theme of the editor. You can use one of the built in themes or one of the custom ones in the Emacs-Stuff/Themes directory.
*** my-frame-height
Sets the initial height of the window opened.
*** my-frame-width
Sets the initial width of the window opened.
*** my-fullscreen
Sets Emacs to open maximized with borders. If set to true this will override my-frame-height/my-frame-width.
*** my-menu-bar
Turns on and off the menu bar. If you are new to emacs I would recommend leaving this on just so you have a way to find the hotkeys.
*** my-tool-bar
Turns on and off the tool bar. If you are new to emacs I would recommend leaving this on just so you have a way to find the hotkeys
*** my-scroll-bar
Turns on and off the scroll bar.  This is a preference and I prefer to have it off. turn it on to see the scroll bar on the right of the window.
*** my-line-numbers
Turns on and off the line numbers. These line numbers are only applied to programming mode and not to any of the plain text modes so they wont be in the way while formatting a document or something.
*** my-tab-line
Turns on and off the tabline. The tabline is similar to the tabs found in a web browser or vs code.
*** my-startup-buffer
Turns on and off the startup buffer. This is the buffer that opens when you first open emacs, It contains useful info like a tutorial so if you are new check that out. if you turn this off then by default the scratch buffer will open on start up.

** Modeline Setup

** Auto Insert Setup

** Language Setup

** Tools Setup

** Ligature Setup

** Copilot Setup

** Org Setup
